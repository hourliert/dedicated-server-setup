---
- name: Ensure nginx data dir exists
  file: path="{{nginx_data}}" state=directory

- name: Ensure nginx ssl dirs exists
  file: path="{{nginx_data}}/{{item}}" state=directory
  with_items:
     - ssl
     - conf
     - vhost.d
     - htpasswd

- name: Copy default configuration
  copy:
    src: proxy.conf
    dest: "{{nginx_data}}/conf/proxy.conf"

- name: Ensure docker-gen dir exists
  file: path="{{docker_gen_data}}" state=directory  

- name: Copy docker-gen nginx template
  copy:
    src: nginx.tmpl
    dest: "{{docker_gen_data}}/nginx.tmpl"

- name: Install nginx-proxy
  docker:
    name: nginx
    image: nginx
    state: reloaded
    pull: always
    restart_policy: always
    log_driver: fluentd
    log_opt: "fluentd-tag=docker.nginx-proxy"
    expose: 
      - 80
      - 443
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /tmp/nginx:/etc/nginx/conf.d
      - "{{nginx_data}}/ssl:/etc/nginx/certs"
      - "{{nginx_data}}/conf/proxy.conf:/etc/nginx/proxy.conf"
      - "{{nginx_data}}/vhost.d:/etc/nginx/vhost.d"
      - "{{nginx_data}}/htpasswd:/etc/nginx/htpasswd"

- name: Install docker-gen
  docker:
    name: docker-gen
    image: jwilder/docker-gen
    state: reloaded
    pull: always
    restart_policy: always
    log_driver: fluentd
    log_opt: "fluentd-tag=docker.docker-gen"
    command: -notify-sighup nginx -watch -only-exposed /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "{{docker_gen_data}}:/etc/docker-gen/templates"
