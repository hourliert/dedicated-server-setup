---
- name: Ensure nginx data dir exists
  file: path="{{nginx_data}}" state=directory owner=www-data group=www-data

- name: Ensure nginx dirs exists
  file: path="{{nginx_data}}/{{item}}" state=directory owner=www-data group=www-data
  with_items:
     - conf
     - vhost.d
     - htpasswd

- name: Copy default configuration
  copy:
    src: "{{item}}"
    dest: "{{nginx_data}}/conf/{{item}}"
    owner: www-data
    group: www-data
  with_items:
    - nginx.conf
    - proxy.conf

- name: Install nginx-proxy
  docker:
    name: nginx
    image: jwilder/nginx-proxy
    state: reloaded
    pull: always
    restart_policy: always
    expose: 
      - 80
      - 443
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{nginx_data}}/ssl:/etc/nginx/certs"
      - "{{nginx_data}}/conf/proxy.conf:/etc/nginx/proxy.conf"
      - "{{nginx_data}}/conf/nginx.conf:/etc/nginx/nginx.conf"
      - "{{nginx_data}}/vhost.d:/etc/nginx/vhost.d"
      - "{{nginx_data}}/htpasswd:/etc/nginx/htpasswd"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - /var/run/docker.sock:/tmp/docker.sock:ro

- name: Install docker letsencrypt companion
  docker:
    name: letsencrypt-nginx-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    state: reloaded
    pull: always
    restart_policy: always
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{nginx_data}}/ssl:/etc/nginx/certs"
